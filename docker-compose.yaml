version: '3.8'
# Define networks and map these to x-vpc Subnets, to use with the services
networks:
  application:
    x-vpc: AppSubnets
  storage:
    x-vpc: StorageSubnets
services:
  osticket:
    container_name: osticket-web
    image: osticket/osticket
    environment:
      MYSQL_HOST: db.xander.local
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: osticket
      MYSQL_USER: osticket
      MYSQL_PASSWORD: secret
    depends_on:
      - db
    ports:
      - 80:80

# Uncomment to use with x-vpc
#    networks:
#      - application
  db:
    container_name: osticket-db
    image: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: osticket
      MYSQL_USER: osticket
      MYSQL_PASSWORD: secret
    ports:
      - 3306:3306/tcp

# Uncomment - but - the private/storage network storage needs to have connection to dockerhub to pull the image
#    networks:
#      - storage
    x-network:
      Ingress:
        Services:
          - Name: osticket
      x-cloudmap: PrivateNamespace

x-cloudmap:
  PrivateNamespace:
    Name: xander.local # Change to whatever you'd want it to be. Optional

x-route53:
  PublicZone:
    Lookup: true
    ZoneName: bdd-testing.compose-x.io # Change domain name here

#x-vpc:
#  Lookup:
#    VpcId:
#      Tags:
#        - Name: docker-ecs-test-vpc
#    PublicSubnets: # ** not used **
#      Tags:
#        - Name: docker-ecs-test-subnet-public1-us-east-1a
#    AppSubnets:
#      Tags:
#        - Name: docker-ecs-test-subnet-public1-us-east-1a
#    StorageSubnets:
#      Tags:
#        - Name: docker-ecs-project-subnet-private1-us-east-1a

x-elbv2:
  public-alb:
    DnsAliases:
      - Names:
          - osticket.bdd-testing.compose-x.io # Change domain name here
        Route53Zone: x-route53::PublicZone
    Properties:
      Type: application
      Scheme: internet-facing
    MacroParameters:
      Ingress:
        ExtSources:
          - IPv4: "0.0.0.0/0"
            Description: ANY
    Listeners:
      - Port: 80 # ALB HTTP Listener, sends all traffic to osticket
        Protocol: HTTP
        Targets:
          - name: osticket:osticket
            access: /
    Services: # Target Group, osticket container, on port 80, and checking on path `/`
      - name: osticket:osticket
        port: 80
        protocol: HTTP
        healthcheck: 80:HTTP:7:2:15:5:/
